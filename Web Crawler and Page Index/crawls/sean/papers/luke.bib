% Sean Luke Publications Bibliography
% April, 2015 
%
% This bibliography has four sections: PUBLICATIONS, TECHNICAL REPORTS, MANUALS, and SOFTWARE
% Within a section, it is sorted first by year, then by last name of first author, then arbitrarily
%


%
%
%
% Publications
% (articles, conference proceedings and workshop papers, book chapters, books, dissertations)
%
%
%

@inproceedings{ Wicke2016Faithless,
author       = { Drew Wicke and Ermo Wei and Sean Luke },
year         = { 2016 },
title        = { Throwing in the Towel: Faithless Bounty Hunters as a Task Allocation Mechanism },
booktitle    = { IJCAI workshop on Interactions with Mixed Agent Types },
}

@article{ Wei2016Lenient,
author       = { Ermo Wei and Sean Luke },
title        = { Lenient Learning in Independent-Learner Stochastic Cooperative Games },
journal      = { Journal of Machine Learning Research },
year         = { 2016 },
volume       = { 17 },
number       = { 84 },
pages        = { 1--42 },
}

@inproceedings{ Luke2016Geometers,
author       = { Sean Luke and Katherine Russell and Bryan Hoyle },
year         = { 2016 },
title        = { Ant Geometers },
booktitle    = { 15th International Conference on the Synthesis and Simulation of Living Systems (ALIFE) },
}

@proceedings{ Almeida2015RoboCup,
title        = { RoboCup 2015: Robot World Cup XIX },
year         = { 2015 },
editor       = { Luis Almeida and Jianmin Ji and Gerald Steinbauer and Sean Luke },
volume       = { 9513 },
series       = { Lecture Notes in Artificial Intelligence },
publisher    = { Springer }
}

@inproceedings { Russell2015Beacons,
author       = { Katherine Russell and Michael Schader and Kevin Andrea and Sean Luke },
year         = { 2015 },
title        = { Swarm Robot Foraging with Wireless Sensor Motes },
booktitle    = { Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAMAS) },
}

@inproceedings { Sullivan2015Training,
author       = { Keith Sullivan and Ermo Wei and Bill Squires and Drew Wicke and Sean Luke },
year         = { 2015 },
title        = { Training Heterogeneous Teams of Robots },
booktitle    = { Autonomous Robots and Multirobot Systems (ARMS) },
}

@inproceedings { Wicke2015Bounty,
author       = { Drew Wicke and David Freelan and Sean Luke },
year         = { 2015 },
title        = { Bounty Hunters and Multiagent Task Allocation },
booktitle    = { Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAMAS) },
}

@inproceedings { Freelan2015TDP,
author       = { David Freelan and Drew Wicke and Chris Burns and Carl Walker and Laura Hovatter and Colin Ward and Daniel Lofaro and Sean Luke },
year         = { 2015 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2015 {RoboCup} Team },
booktitle    = { Proceedings of the 2015 {RoboCup} Symposium },
}

@inproceedings { Freelan2014Rapid,
author       = { David Freelan and Drew Wicke and Keith Sullivan and Sean Luke },
year         = { 2014 },
title        = { Towards Rapid Multi-robot Learning from Demonstration at the {RoboCup} Competition },
booktitle    = { Proceedings of the 2014 {RoboCup} Symposium },
}

@inproceedings { Freelan2014TDP,
author       = { David Freelan and Drew Wicke and Chau Thai and Joshua Snider and Anna Papadogiannakis and Sean Luke },
year         = { 2014 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2014 {RoboCup} Team },
booktitle    = { Proceedings of the 2014 {RoboCup} Symposium },
}

@article { White2013Benchmarks,
author       = { David R. White and James McDermott and Mauro Castelli and Luca Manzoni and Brian W. Goldman and Gabriel Kronberger and Wojciech Ja{\'s}kowski and Una-May O'Reilly and Sean Luke },
title        = { Better {GP} Benchmarks: Community Survey Results and Proposals },
journal      = { Genetic Programming and Evolvable Machines },
year         = { 2013 },
volume       = { 14 },
number       = { 1 },
pages        = { 3--29 },
}

@inproceedings { Luke2013MetaEA,
author       = { Sean Luke and A. K. M. Khaled Ahsan Talukder },
year         = { 2013 },
title        = { Is the Meta-{EA} a Viable Optimization Method? },
booktitle    = { Proceedings of the 15th Annual Conference on Genetic and Evolutionary Computation (GECCO) },
}

@book { Luke2013Metaheuristics,
author       = { Sean Luke },
year         = { 2013 },
title        = { Essentials of Metaheuristics },
edition      = { second },
publisher    = { Lulu },
note         = { Available for free at http://cs.gmu.edu/$\sim$sean/book/metaheuristics/  },
}

@inproceedings { Sullivan2013Unlearning,
author       = { Keith Sullivan and Ahmed ElMolla and Bill Squires and Sean Luke },
year         = { 2013 },
title        = { Unlearning from Demonstration },
booktitle    = { Proceedings of the 23rd International Joint Conference on Artificial Intelligence (IJCAI) },
}

@inproceedings { Gullo2012Multiobjective,
author       = { Francesco Gullo and A. K. M. Khaled Ahsan Talukder and Sean Luke and Carlotta Domeniconi and Andrea Tagarelli },
year         = { 2012 },
title        = { Multiobjective Optimization of Co-Clustering Ensembles },
booktitle    = { Proceedings of the 14th Annual Conference on Genetic and Evolutionary Computation (GECCO) },
pages        = { 1495--1496 },
}

@inproceedings { McDermott2012Benchmarks,
author       = { James McDermott and David R. White and Sean Luke and Luca Manzoni and Mauro Castelli and Leonardo Vanneschi and Wojciech Ja{\'s}kowski and Krzysztof Krawiec and Robin Harper and Kenneth De Jong and Una-May O'Reilly },
year         = { 2012 },
title        = { Genetic Programming Needs Better Benchmarks },
booktitle    = { Proceedings of the 15th Annual Conference on Genetic and Evolutionary Computation (GECCO) },
}

@inproceedings { Sullivan2012Swarm,
author       = { Keith Sullivan and Sean Luke },
year         = { 2012 },
title        = { Learning from Demonstration with Swarm Hierarchies },
booktitle    = { Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS) },
}

@inproceedings { Sullivan2012TDP,
author       = { Keith Sullivan and Katherine Russell and Kevin Andrea and Barak Stout and Sean Luke },
year         = { 2012 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2012 {RoboCup} Team },
booktitle    = { Proceedings of the 2012 {RoboCup} Symposium },
}

@inproceedings { Sullivan2012Training,
author       = { Keith Sullivan and Sean Luke },
year         = { 2012 },
title        = { Real-Time Training of Team Soccer Behaviors },
booktitle    = { Proceedings of the 2012 {RoboCup} Symposium },
}

@article { Balan2011Long,
author       = { Gabriel Balan and Dana Richards and Sean Luke },
year         = { 2011 },
title        = { Long-term Fairness with Bounded Worst-case Losses },
journal      = { Autonomous Agents and Multiagent Systems },
volume       = { 22 },
number       = { 1 },
pages        = { 43--63 },
}

@inproceedings { Luke2011Analysis,
author       = { Sean Luke and Keith Sullivan and Faisal Abidi },
year         = { 2011 },
title        = { Large Scale Empirical Analysis of Cooperative Coevolution },
booktitle    = { Proceedings of the 13th Annual Conference Companion on Genetic and Evolutionary Computation (GECCO) },
pages        = { 151--152 },
}

@inproceedings { Rothman2011Univariate,
author       = { Daniel Rothman and Sean Luke and Keith Sullivan },
year         = { 2011 },
title        = { Do Multiple Trials Help Univariate Methods? },
booktitle    = { Proceedings of the 2011 IEEE Congress on Evolutionary Computation (CEC) },
pages        = { 2391--2398 },
}

@inproceedings { Sullivan2011Multiagent,
author       = { Keith Sullivan and Sean Luke },
year         = { 2011 },
title        = { Multiagent Supervised Training with Agent Hierarchies and Manual Behavior Decomposition },
booktitle    = { Proceedings of the IJCAI 2011 Workshop on Agents Learning Interactively from Human Teachers (ALIHT) },
}

@inproceedings { Sullivan2011TDP,
author       = { Keith Sullivan and Christopher Vo and Sean Luke },
year         = { 2011 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2011 {RoboCup} Team },
booktitle    = { Proceedings of the 2011 {RoboCup} Symposium },
}

@inproceedings { Hrolenok2010Collaborative,
author       = { Brian Hrolenok and Sean Luke and Keith Sullivan and Christopher Vo },
year         = { 2010 },
title        = { Collaborative Foraging using Beacons },
booktitle    = { Proceedings of the Ninth International Conference on Autonomous Agents and Multiagent Systems (AAMAS) },
pages        = { 1197--1204 },
}

@inproceedings { Luke2010Behave,
author       = { Sean Luke and Vittorio Ziparo },
year         = { 2010 },
title        = { Learn to Behave!  {R}apid Training of Behavior Automata },
booktitle    = { Proceedings of the Adaptive and Learning Agents Workshop at AAMAS 2010 },
pages        = { 61--68 },
}

@inproceedings { Sullivan2010Favor,
author       = { Keith Sullivan and Sean Luke and Brian Hrolenok },
year         = { 2010 },
title        = { Can You Do Me A Favor? },
booktitle    = { AAMAS 2010 Workshop on Trust in Agent Societies },
}

@inproceedings { Sullivan2010Hierarchical,
author       = { Keith Sullivan and Sean Luke and Vittorio Ziparo },
year         = { 2010 },
title        = { Hierarchical Learning from Demonstration on Humanoid Robots },
booktitle    = { Proceedings of the Humanoid Robots Learning from Interaction Workshop, at Humanoids 2010 },
}

@inproceedings { Sullivan2010TDP,
author       = { Keith Sullivan and Christopher Vo and Sean Luke and Jyh-Ming Lien },
year         = { 2010 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2010 {RoboCup} Team },
booktitle    = { Proceedings of the 2010 {RoboCup} Symposium },
}

@book { Luke2009Metaheuristics,
author       = { Sean Luke },
year         = { 2009 },
title        = { Essentials of Metaheuristics },
edition      = { first },
publisher    = { Lulu },
note         = { Available for free at http://cs.gmu.edu/$\sim$sean/book/metaheuristics/  },
}

@inproceedings { Sullivan2009TDP,
author       = { Keith Sullivan and Brian Davidson and Christopher Vo and Brian Hrolenok and Sean Luke },
year         = { 2009 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2009 {RoboCup} Team },
booktitle    = { Proceedings of the 2009 {RoboCup} Symposium },
}

@inproceedings { Vo2009Univariate,
author       = { Christopher Vo and Liviu Panait and Sean Luke },
year         = { 2009 },
title        = { Cooperative Coevolution and Univariate Estimation of Distribution Algorithms },
booktitle    = { Proceedings of the 10th ACM SIGEVO Conference on Foundations of Genetic Algorithms (FOGA) },
pages        = { 141--150 },
}

@inproceedings { Balan2008Long,
author       = { Gabriel Balan and Dana Richards and Sean Luke },
year         = { 2011 },
title        = { Long-term Fairness with Bounded Worst-case Losses },
booktitle    = { Proceedings of AAAI Advances in Preference Workshop },
pages        = { 7--12 },
}

@article { Panait2008Theoretical,
author       = { Liviu Panait and Karl Tuyls and Sean Luke },
year         = { 2008 },
title        = { Theoretical Advantages of Lenient Learners: an Evolutionary Game Theoretic Perspective },
journal      = { Journal of Machine Learning Research },
volume       = { 9 },
month        = { March },
pages        = { 423--457 },
}

@inproceedings { Sullivan2008Opportunistic,
author       = { Keith Sullivan and Sean Luke and Curt Larock and Sean Cier and Steven Armentrout },
year         = { 2008 },
title        = { Opportunistic Evolution: {e}fficient Evolutionary Computation on Large-Scale Computational Grids },
booktitle    = { Genetic and Evolutionary Computation Conference Late Breaking Papers },
}

@inproceedings { Sullivan2008TDP,
author       = { Keith Sullivan and Brian Davidson and Christopher Vo and Brian Hrolenok and Sean Luke },
year         = { 2008 },
title        = { {RoboPatriots}: {G}eorge {M}ason {U}niversity 2008 {RoboCup} Team },
booktitle    = { Proceedings of the 2008 {RoboCup} Symposium },
}

@inproceedings { Luke2007Finding,
author       = { Sean Luke and Deepankar Sharma and Gabriel Catalin Balan },
year         = { 2007 },
title        = { Finding Interesting Things: {p}opulation-based Adaptive Parameter Sweeping },
booktitle    = { Proceedings of the 9th Annual Conference on Genetic and Evolutionary Computation (GECCO) },
pages        = { 86--93 },
}

@inproceedings { Sullivan2007Kernels,
author       = { Keith M. Sullivan and Sean Luke },
year         = { 2007 },
title        = { Evolving Kernels for Support Vector Machine Classification },
booktitle    = { Proceedings of the 9th Annual Conference on Genetic and Evolutionary Computation },
pages        = { 1702--1707 },
}

@inproceedings { Balan2006Traffic,
author       = { Gabriel Balan and Sean Luke },
year         = { 2006 },
title        = { History-based Traffic Control },
booktitle    = { Proceedings of the Fifth International Conference on Autonomous Agents and Multi-Agent Systems (AAMAS) },
}

@inproceedings { Cioffi2006Agent,
author       = { Claudio Cioffi-Revilla and Sean Luke and Dawn C. Parker and J. D. Rogers and W. W. Fitzhugh and W. Honeychurch and B. Frohlich and P. DePriest and Naran Bazarsad },
year         = { 2006 },
title        = { Agent-based Dynamics of Social Complexity: {m}odeling Adaptive Behavior and Long-term Change in Inner Asia },
booktitle    = { Proceedings of the First World Congress on Social Simulation },
}

@article { Luke2006Comparison,
author       = { Sean Luke and Liviu Panait },
year         = { 2006 },
title        = { A Comparison of Bloat Control Methods for Genetic Programming },
journal      = { Evolutionary Computation },
volume       = { 14 },
number       = { 13 },
pages        = { 309--344 },
}

@inproceedings { Panait2006Archive,
author       = { Liviu Panait and Keith Sullivan and Sean Luke },
year         = { 2006 },
title        = { Archive-based Cooperative Coevolutionary Algorithms },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
}

@article { Panait2006Biasing,
author       = { Liviu Panait and Sean Luke and R. Paul Wiegand },
year         = { 2006 },
title        = { Biasing Coevolutionary Search for Optimal Multiagent Behaviors },
journal      = { IEEE Transactions on Evolutionary Computation },
volume       = { 10 },
number       = { 6 },
pages        = { 629--645 },
}

@inproceedings { Panait2006Lenient,
author       = { Liviu Panait and Keith Sullivan and Sean Luke },
year         = { 2006 },
title        = { Lenient Learners in Cooperative Multiagent Systems },
booktitle    = { Proceedings of the 2006 Conference on Autonomous Agents and Multi-Agent Systems (AAMAS) },
}

@inproceedings { Panait2006Selecting,
author       = { Liviu Panait and Sean Luke },
year         = { 2006 },
title        = { Selecting Informative Actions Improves Cooperative Multiagent Learning },
booktitle    = { Proceedings of the 2006 Conference on Autonomous Agents and Multi-Agent Systems (AAMAS) },
}

@inproceedings { Sullivan2006Learners,
author       = { Keith Sullivan and Liviu Panait and Sean Luke },
year         = { 2006 },
title        = { Can Good Learners Always Compensate for Poor Learners? },
booktitle    = { Proceedings of the 2006 Conference on Autonomous Agents and Multi-Agent Systems (AAMAS) },
}

@inproceedings { Bigbee2006Sugarscape,
author       = { Tony Bigbee and Claudio Cioffi-Revilla and Sean Luke },
year         = { 2006 },
title        = { Replicating the Classic Sugarscape in {MASON} },
booktitle    = { Third International Conference on Complexity },
organization = { Groupement de Recherche en Economie Quantitative d’Aix-Marseille },
}

@inproceedings { Bigbee2005Sugarscape,
author       = { Anthony Bigbee and Claudio Cioffi-Revilla and Sean Luke },
year         = { 2005 },
title        = { Replication of Sugarscape Using {MASON} },
booktitle    = { Agent-based Approaches in Economic and Social Complex systems IV: Post-Proceedings of the AESCS International Workshop },
pages        = { 183--190 },
}


@article { Cassimatis2005Reports,
author       = {  Nicholas L. Cassimatis and Sean Luke and Simon D. Levy and Ross Gayler and Pentti Kanerva and Chris Eliasmith and Timothy W. Bickmore and Alan C. Schultz and Randall Davis and James A. Landay and Robert C. Miller and Eric Saund and Thomas F. Stahovich and Michael L. Littman and Satinder P. Singh and Shlomo Argamon and Shlomo Dubnov },
title        = { Reports on the 2004 {AAAI Fall Symposia} },
journal      = { {AI} Magazine },
volume       = { 26 },
number       = { 1 },
year         = { 2005 },
pages        = { 98--102 },
}

@inproceedings { Hoen2005Overview,
author       = { Pieter Jan 't Hoen and Karl Tuyls and Liviu Panait and Sean Luke and J. A. La Poutr{\'e} },
year         = { 2005 },
title        = { An Overview of Cooperative and Competitive Multiagent Learning },
booktitle    = { Learning and Adaptation in Multi-Agent Systems, First International Workshop (LAMAS) },
pages        = { 1--46 },
}

@inproceedings { Luke2005CValue,
author       = { Sean Luke },
year         = { 2005 },
title        = { Evolutionary Computation and the {C}-value Paradox },
booktitle    = { Proceedings of the 2005 Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 91--97 },
}

@article { Luke2005MASON,
author       = { Sean Luke and Claudio Cioffi-Revilla and Liviu Panait and Keith Sullivan and Gabriel Balan },
year         = { 2005 },
title        = { {MASON}: a Multi-agent Simulation Environment },
journal      = { Simulation: Transactions of the Society for Modeling and Simulation International },
volume       = { 82 },
number       = { 7 },
pages        = { 517--527 },
}

@inproceedings { Luke2005Tunably,
author       = { Sean Luke and Keith Sullivan and Liviu Panait and Gabriel Balan },
year         = { 2005 },
title        = { Tunably Decentralized Algorithms for Cooperative Target Observation },
booktitle    = { Proceedings of the 2005 Conference on Autonomous Agents and Multi-Agent Systems (AAMAS) },
pages        = { 911--917 },
}

@inproceedings { Panait2005Collaboration,
author       = { Liviu Panait and Sean Luke },
year         = { 2005 },
title        = { Time-dependent Collaboration Schemes for Cooperative Coevolutionary Algorithms },
booktitle    = { AAAI 2005 Fall Symposium on Coevolutionary and Coadaptive Systems },
pages        = { 18--25 },
}

@article { Panait2005Cooperative,
author       = { Liviu Panait and Sean Luke },
year         = { 2005 },
title        = { Cooperative Multi-agent Learning: {t}he State of the Art },
journal      = { Autonomous Agents and Multi-agent Systems },
volume       = { 11 },
number       = { 3 },
month        = { November },
pages        = { 387--434 },
}

@inproceedings { Balan2004Demonstration,
author       = { Gabriel Catalin Balan and Sean Luke },
year         = { 2004 },
title        = { A Demonstration of Neural Programming Applied to Non-Markovian Problems },
booktitle    = { Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 422--433 },
}

@inproceedings { Cervone2004Earthquakes,
author       = { Guido Cervone and Liviu Panait and Ramesh Singh and Sean Luke },
year         = { 2004 },
title        = { An application of evolutionary algorithms to study the extent of {SLHF} anomaly associated with coastal earthquakes },
booktitle    = { Late Breaking Papers of the Genetic and Evolutionary Computation Conference (GECCO) },
}

@inproceedings { Cioffi2004Mnemonic,
author       = { Claudio Cioffi-Revilla and Sean Paus and Sean Luke and James Olds and Jason Thomas },
year         = { 2004 },
title        = { Mnemonic Structure and Sociality: {a} Computational Agent-based Simulation Model },
booktitle    = { Proceedings of the Conference on Collective Intentionality IV },
}

@inproceedings { Panait2004Alternative,
author       = { Liviu Panait and Sean Luke },
year         = { 2004 },
title        = { Alternative Bloat Control Methods },
booktitle    = { Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 630--641 },
}

@inproceedings { Luke2004MASON,
author       = { Sean Luke and Claudio Cioffi-Revilla and Liviu Panait and Keith Sullivan },
year         = { 2004 },
title        = { {MASON}: {a} New Multi-agent Simulation Toolkit },
booktitle    = { Proceedings of the 2004 SwarmFest Workshop },
}

@inproceedings { Panait2004Ant,
author       = { Liviu Panait and Sean Luke },
year         = { 2004 },
title        = { Ant Foraging Revisited },
booktitle    = { Proceedings of the Ninth International Conference on the Simulation and Synthesis of Living Systems (ALIFE) },
pages        = { 569--574 },
}

@inproceedings { Panait2004Collaborative,
author       = { Liviu Panait and Sean Luke },
year         = { 2004 },
title        = { Collaborative Multi-agent Learning: {a} Survey },
booktitle    = { AAAI Fall Symposium on Multiagent Learning },
}

@inproceedings { Panait2004Learning,
author       = { Liviu Panait and Sean Luke },
year         = { 2004 },
title        = { Learning ant foraging behaviours },
booktitle    = { Ninth International Conference on the Simulation and Synthesis of Living Systems (ALIFE) },
pages        = { 575--580 },
}

@inproceedings { Panait2004Phermone,
author       = { Liviu Panait and Sean Luke },
year         = { 2004 },
title        = { A Pheromone-based Utility Model for Collaborative Foraging },
booktitle    = { Proceedings of the Third International Joint Conference on Autonomous Angents and Multi Agent Systems (AAMAS) },
pages        = { 36--43 },
}

@inproceedings { Panait2004Sensitivity,
author       = { Liviu Panait and R. Paul Wiegand and Sean Luke },
year         = { 2004 },
title        = { A Sensitivity Analysis of a Cooperative Coevolutionary Algorithm Biased for Optimization },
booktitle    = { Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 587--584 },
}

@inproceedings { Panait2004Visual,
author       = { Liviu Panait and R. Paul Wiegand Sean Luke },
year         = { 2004 },
title        = { A Visual Demonstration of Convergence Properties of Cooperative Coevolution },
booktitle    = { Parallel Problem Solving from Nature (PPSN) },
pages        = { 892--901 },
}

@incollection { Heflin2003SHOE,
author       = { Jeff Heflin and James Hendler and Sean Luke },
year         = { 2003 },
title        = { {SHOE}: A Blueprint for the Semantic Web },
editor       = { Dieter Fensel and James Hendler and Henry Lieberman and Wolfgang Wahlster },
booktitle    = { Spinning the Semantic Web: Bringing the World Wide Web to Its Full Potential },
pages        = { 29--64 },
publisher    = { MIT Press },
}

@inproceedings { Luke2003Implosion,
author       = { Sean Luke and Gabriel Catalin Balan and Liviu Panait },
year         = { 2003 },
title        = { Population Implosion in Genetic Programming },
booktitle    = { Genetic and Evolutionary Computation (GECCO) },
pages        = { 1729--1739 },
}

@inproceedings { Luke2003MASON,
author       = { Sean Luke and Gabriel Catalin Balan and Liviu Panait and Claudio Cioffi-Revilla and Sean Paus },
year         = { 2003 },
title        = { {MASON}: {a} Multiagent Simulation Library },
booktitle    = { Proceedings of the Agent 2003 Conference on Challenges in Social Simulation },
}

@inproceedings { Luke2003MASONb,
author       = { Sean Luke and Gabriel Catalin Balan and Liviu Panait },
year         = { 2003 },
title        = { {MASON}: {a} {Java} Multi-agent Simulation Library },
booktitle    = { Proceedings of the Second International Workshop on the Mathematics and Algorithms of Social Insects },
}

@article { Luke2003Modification,
author       = { Sean Luke },
year         = { 2003 },
title        = { Modification Point Depth and Genome Growth in Genetic Programming },
journal      = { Evolutionary Computation },
volume       = { 11 },
number       = { 1 },
pages        = { 67--106 },
}

@inproceedings { Panait2003Ant,
author       = { Liviu Panait and Sean Luke  },
year         = { 2003 },
title        = { Ant Foraging Revisited },
booktitle    = { Proceedings of the Second International Workshop on the Mathematics and Algorithms of Social Insects },
pages        = { 184 },
}

@inproceedings { Panait2003Evolving,
author       = { Liviu Panait and Sean Luke },
year         = { 2003 },
title        = { Evolving foraging behaviors },
booktitle    = { Proceedings of the Second International Workshop on the Mathematics and Algorithms of Social Insects },
pages        = { 131--138 },
}

@inproceedings { Panait2003Improving,
author       = { Liviu Panait and R. Paul Wiegand Sean Luke },
year         = { 2003 },
title        = { Improving Coevolutionary Search for Optimal Multiagent Behaviors },
booktitle    = { Proceedings of the Eighteenth International Joint Conference on Artificial Intelligence (IJCAI) },
pages        = { 653--658 },
}

@inproceedings { Panait2003Robust,
author       = { Liviu Panait and Sean Luke },
year         = { 2003 },
title        = { Methods for Evolving Robust Programs },
booktitle    = { Genetic and Evolutionary Computation (GECCO) },
pages        = { 1740--1751 },
}

@inproceedings { Luke2002Dynamics,
author       = { Sean Luke and R. Paul Wiegand },
year         = { 2002 },
title        = { When Coevolutionary Algorithms Exhibit Evolutionary Dynamics },
booktitle    = { Workshop on Understanding Coevolution: Theory and Analysis of Coevolutionary Algorithms (at GECCO) },
pages        = { 236--241 },
}

@inproceedings { Luke2002Guaranteeing,
author       = { Sean Luke and R. Paul Wiegand },
year         = { 2002 },
title        = { Guaranteeing Coevolutionary Objective Measures },
booktitle    = { Foundations of Genetic Algorithms VII },
pages        = { 237--251 },
}

@inproceedings { Luke2002Lexicographic,
author       = { Sean Luke and Liviu Panait },
year         = { 2002 },
title        = { Lexicographic Parsimony Pressure },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 829--836 },
}

@inproceedings { Luke2002Nonparametric,
author       = { Sean Luke and Liviu Panait },
year         = { 2002 },
title        = { Fighting Bloat With Nonparametric Parsimony Pressure },
booktitle    = { Parallel Problem Solving from Nature (PPSN) },
pages        = { 411--421 },
}

@inproceedings { Luke2002Perfect,
author       = { Sean Luke and Liviu Panait },
year         = { 2002 },
title        = { Is the Perfect the Enemy of the Good? },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 820--828 },
}

@inproceedings { Panait2002Competitive,
author       = { Liviu Panait and Sean Luke },
year         = { 2002 },
title        = { A Comparison of Two Competitive Fitness Functions },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 503--511 },
}

@inproceedings { Luke2001Short,
author       = { Sean Luke },
year         = { 2001 },
title        = { When short runs beat long runs },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 74--80 },
}

@inproceedings { Luke2001Survey,
author       = { Sean Luke and Liviu Panait },
year         = { 2001 },
title        = { A survey and comparison of tree generation algorithms },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 81--88 },
}

@article { Andre2000Commentator,
author       = { E. Elisabeth Andre and Kim Binsted and Kumiko Tanaka-Ishii and Sean Luke and Gerd Herzog and Thomas Rist },
year         = { 2000 },
title        = { Three {RoboCup} simulation league commentator systems },
journal      = { AI Magazine },
volume       = { 21 },
number       = { 1 },
month        = { Spring },
pages        = { 57--66 },
}

@phdthesis { Luke2000Dissertation,
abstract     = { Genetic Programming is an evolutionary computation technique which searches for those computer programs that best solve a given problem. As genetic programming is applied to increasingly difficult problems, its effectiveness is hampered by the tendency of candidate program solutions to grow in size independent of any corresponding increases in quality. This bloat in solutions slows the search process, interferes with genetic programming's searching, and ultimately consumes all available memory. The challenge for scaling up genetic programming is to find the best solutions possible before bloat puts a stop to evolution. This can be tackled either by finding better solutions more rapidly, or by taking measures to delay bloat as long as possible.{\par} This thesis discusses issues both in speeding the search process and in delaying bloat in order to scale genetic programming to tackle harder problems. It describes evolutionary computation and genetic programming, and details the application of genetic programming to cooperative robot soccer and to language induction. The thesis then compares genetic programming breeding strategies, showing the conditions under which each strategy produces better individuals with less bloating. It then analyzes the tree growth properties of the standard tree generation algorithms used, and proposes new, fast algorithms which give the user better control over tree size. Lastly, it presents evidence which directly contradicts existing bloat theories, and gives a more general theory of code growth, showing that the issue is more complicated than it first appears. },
address      = { College Park, MD 20742 USA },
author       = { Sean Luke },
errata       = { {1. In Algorithm 2 (p. 6), the line $P{\leftarrow}P\\[q]$ should read $P{\leftarrow}P\\[s]$. 2. Figures 5.2 through 5.5 (p. 38--39) are not in proper evolutionary-time order. The proper order is 5.4, 5.5, 5.2, 5.3.} },
school       = { Department of Computer Science, University of Maryland },
title        = { Issues in Scaling Genetic Programming: Breeding Strategies, Tree Generation, and Code Bloat },
year         = { 2000 },
}

@inproceedings { Luke2000Introns,
author       = { Sean Luke },
year         = { 2000 },
title        = { Code growth is not caused by introns },
booktitle    = { Late Breaking Papers at the 2000 Genetic and Evolutionary Computation Conference (GECCO) },
pages        = { 228--235 },
}

@article { Luke2000TreeCreation,
author       = { Sean Luke },
year         = { 2000 },
title        = { Two fast tree-creation algorithms for genetic programming },
journal      = { IEEE Transactions on Evolutionary Computation },
volume       = { 4 },
number       = { 3 },
month        = { September },
pages        = { 274--283 },
}

@inproceedings { Heflin1999Coping,
author       = { Jeff Heflin and James Hendler and Sean Luke },
year         = { 1999 },
title        = { Coping with Changing Ontologies in a Distributed Environment },
booktitle    = { AAAI Workshop on Ontology Management (WS-99--13)},
pages        = { 74--79 },
}

@inproceedings { Heflin1999Ontology,
author       = { Jeff Heflin and James Hendler and Sean Luke },
year         = { 1999 },
title        = { Applying Ontology to the Web: {a} Case Study },
booktitle    = { Engineering Applications of Bio-Inspired Artificial Neural Networks (International Work-Conference on Artificial and Natural Neural Networks) },
pages        = { 715--724 },
}

@inproceedings { Luke1999Genetic,
author       = { Sean Luke and Shugo Hamahashi and Hiroaki Kitano },
year         = { 1999 },
title        = { {``Genetic''} programming },
booktitle    = { Proceedings of the Genetic and Evolutionary Computation Conference (GECCO) },
}

@inproceedings { Binsted1998Commentary,
author       = { Kim Binsted and Sean Luke },
year         = { 1998 },
title        = { Character design for soccer commentary },
booktitle    = { Robot Soccer World Cup II: Proceedings of the second {RoboCup} Symposium },
pages        = { 23--35 },
}

@inproceedings { Heflin1998Reading,
author       = { Jeff Heflin and James Hendler and Sean Luke },
year         = { 1998 },
title        = { Reading between the lines: {u}sing {SHOE} to discover implicit knowledge from the web },
booktitle    = { AI and Information Integration, Papers from the 1998 Workshop (WS-98-14) },
pages        = { 51--57 },
}

@article { Kitano1998Perfect,
author       = { Hiroaki Kitano and Shugo Hamahashi and Sean Luke },
year         = { 1998 },
title        = { The perfect \textit{C. elegans} project: {a}n initial report },
journal      = { Artificial Life },
volume       = { 4 },
number       = { 2 },
month        = { Spring },
pages        = { 141--156 },
}

@article { Luke1998Biology,
author       = { Sean Luke and Shugo Hamahashi and Koji Kyoda and Hiroki Ueda },
year         = { 1998 },
title        = { Biology: See It Again---for the First Time },
journal      = { IEEE Intelligent Systems },
volume       = { 13 },
number       = { 5 },
month        = { September / October },
pages        = { 6--8 },
}

@article { Luke1998Coevolving,
author       = { Sean Luke },
year         = { 1998 },
title        = { Coevolving Soccer Softbots },
journal      = { AI Magazine },
volume       = { 19 },
number       = { 3 },
month        = { Fall },
pages        = { 54 },
}

@inproceedings { Luke1998Retrospective,
author       = { Sean Luke },
year         = { 1998 },
title        = { Evolving soccerbots: {a} retrospective },
booktitle    = { Proceedings of 12th Annual Conference of the Japanese Society for Artificial Intelligence (JSAI) },
}

@inproceedings { Luke1998Revised,
author       = { Sean Luke and Lee Spector },
year         = { 1998 },
title        = { A Revised Comparison of Crossover and Mutation in Genetic Programming },
booktitle    = { Proceedings of the Third Annual Genetic Programming Conference (GP) },
}

@inproceedings { Luke1998Soccer,
author       = { Sean Luke },
year         = { 1998 },
title        = { Genetic Programming Produced Competitive Soccer Softbot Teams for {RoboCup}97 },
booktitle    = { Proceedings of the Third Annual Genetic Programming Conference (GP) },
pages        = { 204--222 },
}

@inproceedings { Luke1997Coevolving,
author       = { Sean Luke and Charles Hohn and Jonathan Farris and Gary Jackson and James Hendler },
booktitle    = { Proceedings of the First International Workshop on RoboCup },
title        = { Co-evolving Soccer Softbot Team Coordination with Genetic Programming },
year         = { 1997 },
pages        = { 398--411 },
}

@inproceedings { Luke1997Comparison,
author       = { Sean Luke and Lee Spector },
year         = { 1997 },
title        = { A Comparison of Crossover and Mutation in Genetic Programming },
booktitle    = { Genetic Programming 1997: Proceedings of the Second Annual Conference (GP) },
pages        = { 240--248 },
}

@inproceedings { Luke1997Ontology,
author       = { Sean Luke and Lee Spector and David Rager and James Hendler },
year         = { 1997 },
title        = { Ontology-based Web Agents },
booktitle    = { Proceedings of the First International Conference on Autonomous Agents (AutonomousAgents) },
pages        = { 59--66 },
} 	

@article { Luke1997Web,
author       = { Sean Luke and James Hendler },
year         = { 1997 },
title        = { Web Agents That Work },
journal      = { IEEE Multimedia },
volume       = { 4 },
number       = { 3 },
month        = { July / September },
pages        = { 76--80 },
}

@inproceedings { Luke1996Edge,
author       = { Sean Luke and Lee Spector },
year         = { 1996 },
title        = { Evolving Graphs and Networks with Edge encoding: {p}reliminary Report },
booktitle    = { Late Breaking Papers at the Genetic Programming 1996 Conference (GP) },
pages        = { 117--124 }
}   	

@inproceedings { Luke1996Evolving,
author       = { Sean Luke and Lee Spector },
year         = { 1996 },
title        = { Evolving Teamwork and Coordination with Genetic Programming },
booktitle    = { Genetic Programming 1996: Proceedings of the First Annual Conference },
pages        = { 141--149 },
} 	

@inproceedings { Luke1996Ontology,
author       = { Sean Luke and Lee Spector and David Rager },
year         = { 1996 },
title        = { Ontology-Based Knowledge Discovery on the World-Wide Web },
booktitle    = { Working Notes of the Workshop on Internet-Based Information Systems at the 13th National Conference on Artificial Intelligence (AAAI96) },
pages        = { 96--102 },
} 	

@inproceedings { Spector1996Cognition,
author       = { Lee Spector and Sean Luke },
year         = { 1996 },
title        = { Culture Enhances the Evolvability of Cognition },
booktitle    = { Cognitive Science 1996 Conference Proceedings (CogSci) },
}

@inproceedings { Spector1996Cultural,
author       = { Lee Spector and Sean Luke },
year         = { 1996 },
title        = { Cultural Transmission of Information in Genetic Programming },
booktitle    = { Genetic Programming 1996: Proceedings of the First Annual Conference (GP) },
pages        = { 200--208 },
} 	












%
%
%
% Technical Reports
%
%
%



@techreport { GMU-CS-TR-2014-5,
author       = { Sean Luke },
title        = { Building a Hierarchical Finite-State Automaton: {a} Primer },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2014 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2014-5 },
abstract     = { This primer introduces concepts in hierarchical finite-state automata (HFA) and their use, gives a rough formalism, and then builds an entire HFA library, with all the trimmings, in Lua.The primer is intended to educate the reader on how HFA can be used, how they are programmed, and how HFA libraries are built. },
}  

@techreport { GMU-CS-TR-2013-9,
author       = { Nicolas Payette and Marius Bujorianu and Glen Ropella and Ken Cline and Jeffrey Schank and Matt Miller and Sara Jonsson and Laszlo Gulyas and Richard Legendi and Olaf Bochmann and Lu{\'i}s de Sousa and Vlasios Voudouris and Daniil Kiose and Przemyslaw Szufel and Steve Saul and John McManus and Vittorio Scarano and Gennaro Cordasco and Chris Hollander and Paul Wiegand and Vera Kazakova and Brian Hrolenok and J. Daniel Rogers and Michael Schader  and Sean Luke and Kenneth De Jong and Mark Coletti and Paul Schopf and Claudio Cioffi-Revilla and Keith Sullivan and Khaled Talukder and Ahmed Elmolla and Ermo Wei },
title        = { Future {MASON} Directions: Community Recommendations (Report of the 2013 {MASON} {NSF} {W}orkshop) },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2013 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2013-9 },
abstract     = { MASON is an open source multiagent simulation library geared towards simulating very large numbers of relatively lightweight interacting agents. On June 15 and 16, 2013, approximately two dozen invitees convened at George Mason University to discuss future directions for MASON and needs of the MASON community. This meeting formed the 2013 MASON NSF Workshop. During the Workshop, participants identified nine areas of interest to the community where they felt MASON should be improved or extended. This document details the reports of those working groups. },
}

@techreport { GMU-CS-TR-2013-8,
author       = { Sean Luke },
title        = { Plagiarism },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2013 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2013-8 },
abstract     = { Students are often confused by what constitutes plagiarism in academia and the seriousness with which the offense is treated. The objective of this essay is to explain the issue and provide examples to explain what is plagiarism, and hopefully act as a useful guide. },
}

@techreport { GMU-CS-TR-2013-2,
author       = { Liviu Panait and Keith Sullivan and Sean Luke },
title        = { Lenience towards Teammates Helps in Cooperative Multiagent Learning },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2013 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2013-2 },
abstract     = { Concurrent learning is a form of cooperative multiagent learning in which each agent has an independent learning process and little or no control over its teammates' actions.In such learning algorithms, an agent's perception of the joint search space depends on the reward received by both agents, which in turn depends on the actions currently chosen by the other agents.The agents will tend to converge towards certain areas of the space because of their learning processes.As a result, an agent's perception of the search space may benefit if computed over multiple rewards at early stages of learning, but additional rewards have little impact towards the end. We thus suggest that agents should be lenient with their teammates: ignore many of the low rewards initially, and fewer rewards as learning progresses.We demonstrate the benefit of lenience in a cooperative co-evolution algorithm and in a new reinforcement learning algorithm. },
}

@techreport { GMU-CS-TR-2012-4,
author       = { William Squires and Sean Luke },
title        = { Adaptive Search for Interesting Things },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2012 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2012-4 },
abstract     = { The results of a parameter sweep over a multidimensional parameter space are often used to gain an understanding of the space beyond simply identifying optima.But sweeps are costly, and so it is highly desirable to adaptively sample the space in such a way as to concentrate precious samples on the more "interesting" areas of the space.In this paper we analyze and expand on a previous work which defined such areas as those in which the slope of some quality function was high.We develop a performance metric in terms of generalizability of the resulting sampled model, examine the existing method in terms of scalability and accuracy, and then propose and examine two population-based approaches which address some of its shortcomings. },
}

@techreport { GMU-CS-TR-2012-3,
author       = { Francesco Gullo and AKM Khaled Ahsan Talukder and Sean Luke and Carlotta Domeniconi and Andrea Tagarelli },
title        = { Multiobjective Optimization of Co-Clustering Ensembles },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2012 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2012-3 },
abstract     = { Co-clustering is a machine learning task where the goal is to simultaneously develop clusters of the data and of their respective features. We address the use of co-clustering ensembles to establish a consensus co-clustering over the data. As is obvious from its name, co-clustering is naturally multiobjective. Previous work tackled the problem using both rudimentary multiobjective optimization and expectation maximization, then later a gradient ascent approach which outperformed both of them. In this paper we develop a new preference-based multiobjective optimization algorithm to compete with the gradient ascent approach. Unlike this gradient ascent algorithm, our approach once again tackles the co-clustering problem with multiple heuristics, but also applies the gradient ascent algorithm's joint heuristic as a preference selection procedure. As a result, we are able to significantly outperform the gradient ascent algorithm on feature clustering and on problems with smaller datasets. },
}

@techreport { GMU-CS-TR-2011-5,
author       = { Keith Sullivan and Sean Luke },
title        = { Hierarchical Multi-Robot Learning from Demonstration },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2011 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2011-5 },
abstract     = { Developing robot behaviors is a tedious task requiring multiple coding, trial, and debugging cycles. This makes attractive the notion of learning from demonstration, whereby a robot learns behaviors in real time from the examples of a demonstrator. Learning from demonstration can be problematic, however, because of the number of trials necessary to gather sufficient samples to learn correctly. The problem is compounded in a multi-robot setting due to the potentially much larger design space arising from the number of and interactions between the robots. In this paper, we propose a learning from demonstration system capable of rapidly training multiple robots to perform a collaborative task. Our supervised learning method applies user domain knowledge to decompose complex behaviors into a hierarchy of simpler behaviors, which are easier to train and learn, and require many fewer samples to do so. The system further reduces the state space by only considering environmental features and actions pertinent to each decomposed simple behavior. Decomposition occurs not only within individual robot behaviors but also at the hierarchical group behavior level. Experiments using Pioneer robots in a patrol scenario illustrate our system. },
}

@techreport { GMU-CS-TR-2011-2,
author       = { Sean Luke and Keith Sullivan and Faisal Abidi },
title        = { Large Scale Empirical Analysis of Cooperative Coevolution },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2011 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2011-2 },
abstract     = { We present a study of cooperative coevolution applied to moderately complex optimization problems in large-population environments. The study asks three questions.First: what collaboration methods perform best, and when?Second: how many subpopulations are desirable? Third: is it worthwhile to do more than one trial per fitness evaluation? We discovered thatparallel methods tended to work better than sequential ones, that ``shuffling'' (a collaboration method) predominated in performance in more complex problems, that more subpopulations generally did better, and that more trials performed marginally better. },
}

@techreport { GMU-CS-TR-2011-0,
author       = { Sean Luke },
title        = { How to Make a Technical Report (Rev. 3) },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2011 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2011-0 },
abstract     = { The following document describes the preferred formatting of technical reports and submission guidelines.This document itself is formatted according to the preferred formatting rules. },
}

@techreport { GMU-CS-TR-2010-16,
author       = { Keith Sullivan and Mark Coletti and Sean Luke },
title        = { {GeoMason}: Geospatial Support for {MASON} },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2010 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2010-16 },
abstract     = { MASON is a free, open-source Java-based discrete event multi-agent simulation toolkit that has been used to model network intrusions, unmanned aerial vehicles, nomadic migrations, and farmer/herder conflicts, among others. Many multi-agent models use georeferenced data which represent such things as road networks, rivers, vegetation coverage, population, and topology. However, MASON does not directly support georeferenced data. Therefore practitioners using MASON must hand craft such support, which may be difficult and error prone.In this paper we describe newly added geospatial functionality in MASON that addresses this problem. We discuss the design of this functionality, called GeoMASON, and its use and limitations. Finally, we give examples on how to import and manipulate georeferenced data. },
}

@techreport { GMU-CS-TR-2008-2,
author       = { Gabriel Balan and Dana Richards and Sean Luke },
title        = { Long-term Fairness with Bounded Worst-Case Losses },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2008 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2008-2 },
abstract     = { How does one repeatedly choose actions so as to be fairest to the multiple beneficiaries of those actions?We examine approaches to discovering sequences of actions for which the worst-off beneficiaries are treated maximally well, then secondarily the second-worst-off, and so on.We formulate the problem for the situation where the sequence of action choices continues forever; this problem may be reduced to a set of linear programs.We then extend the problem to situations where the game ends at some unknown finite time in the future.We demonstrate that an optimal solution is NP-hard, and present two good approximation algorithms. },
}

@techreport { GMU-CS-TR-2008-1,
author       = { Gabriel Balan and Sean Luke and Dana Richards },
title        = { Algorithms for Leximin-Optimal Fair Policies in Repeated Games },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2008 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2008-1 },
abstract     = { Solutions to non-cooperative multiagent systems often require achieving a joint policy which is as fair to all parties as possible.There are a variety of methods for determining the fairest such joint policy.One approach, { \it min fairness }, finds the policy which maximizes the minimum average reward given to any agent.We focus on an extension, { \it leximin fairness }, which breaks ties among candidate policies by choosing the one which maximizes the second-to-minimum average reward, then the third-to-minimum average reward, and so on.This method has a number of advantages over others in the literature, but has so far been little-used because of the computational cost in employing it to find the fairest policy.In this paper wepropose a linear programming based algorithm for computing leximin fairness in repeated games which has a polynomial time complexity given certain reasonable assumptions. },
}

@techreport { GMU-CS-TR-2008-0,
author       = { Sean Luke },
title        = { How to Make a Technical Report (Rev. 2) },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MSN 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2008 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2008-0 },
note2        = { This document has been superceded by GMU CS Department Technical Report GMU-CS-TR-2011-0, ``How To Make a Technical Report (Rev. 2)'', by Sean Luke, available at http://cs.gmu.edu },
abstract     = { The following document describes the preferred formatting of technical reports and submission gu idelines.This document itself is formatted according to the preferred formatting rules. },
}

@techreport { GMU-CS-TR-2005-5,
author       = { Liviu Panait and Sean Luke },
title        = { Selecting Informative Actions Improves Cooperative Multiagent Learning },
institution  = { Dept. of Computer Science, George Mason University },
address      = { 4400 University Dr., MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2005 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2005-5 },
abstract     = { In concurrent cooperative multiagent learning, each agent in a team simultaneously learns to improve the overall performance of the team, with no direct control over the actions chosen by its teammates. An agent's action selection directly influences the rewards received by all the agents; this results in a co-adaptation among the concurrent learning processes. Co-adaptation can drive the team towards suboptimal solutions because agents tend to select those actions that are rewarded better, without any consideration for how such actions may affect the search of their teammates. We argue that to counter this tendency, agents should also prefer actions that inform their teammates about the structure of the joint search space in order to help them choose from among various action options. We analyze this approach in a cooperative coevolutionary framework, and we propose a new algorithm, oCCEA, that highlights the advantages of selecting informative actions. We show that oCCEA generally outperforms other cooperative coevolution algorithms on our test problems. },
}

@techreport { GMU-CS-TR-2005-4,
author       = { Liviu Panait and Keith Sullivan and Sean Luke },
title        = { Lenience Towards Teammates Helps in Cooperative Multiagent Learning },
institution  = { Dept. of Computer Science, George Mason University },
address      = { 4400 University Dr., MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2005 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2005-4 },
abstract     = { Concurrent learning is a form of cooperative multiagent learning in which each agent has an independent learning process and little or no control over its teammates' actions. In such learning algorithms, an agent's perception of the joint search space depends on the reward received by both agents, which in turn depends on the actions currently chosen by the other agents. The agents will tend to converge towards certain areas of the space because of their learning processes. As a result, an agent's perception of the search space may benefit if computed over multiple rewards at early stages of learning, but additional rewards have little impact towards the end. We thus suggest that agents should be lenient with their teammates: ignore many of the low rewards initially, and fewer rewards as learning progresses. We demonstrate the benefit of lenience in a cooperative co-evolution algorithm and in a new reinforcement learning algorithm. },
}

@techreport { GMU-CS-TR-2005-3,
author       = { Keith Sullivan and Liviu Panait and Gabriel Balan and Sean Luke },
title        = { Can Good Learners Always Compensate for Poor Learners? },
institution  = { Dept. of Computer Science, George Mason University },
address      = { 4400 University Dr., MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2005 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2005-3 },
abstract     = { Can a good learner compensate for a poor learner when paired in a coordination game? Previous work has given an example where a special learning algorithm (FMQ) is capable of doing just that when paired with a specific capable algorithm even in games which stump the poorer algorithm when paired with itself. In this paper, we argue that this result is not general. We give a straightforward extension to the coordination game in which FMQ cannot compensate for the lesser algorithm. We also provide other problematic pairings, and argue that another highquality algorithm cannot do so either. },
}

@techreport { GMU-CS-TR-2004-1,
author       = { Sean Luke and Keith Sullivan and Gabriel Catalin Balan and Liviu Panait },
title        = { Tunably Decentralized Algorithms for Cooperative Target Observation },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2004 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2004-1 },
abstract     = { Multi-agent problem domains may require distributed algorithms for a variety of reasons: local sensors, limitations of communication, and availability of distributed computational resources. In the absence of these constraints, centralized algorithms are often more efficient, simply because they are able to take advantage of more information. We introduce a variant of the cooperative target observation domain which is free of such constraints. We propose two algorithms, inspired by K-means clustering and hill-climbing respectively, which are scalable in degree of decentralization. Neither algorithm consistenly outperforms the other across over all problem domain settings. Surprisingly, we find that hill-climbing is sensitive to degree of decentralization, while K-means is not. We also experiment with a combination of the two algorithms which draws strength from each. },
}

@techreport { GMU-CS-TR-2003-1,
author       = { Liviu Panait and Sean Luke },
title        = { Cooperative Multi-Agent Learning: The State of the Art },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2003 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2003-1 },
abstract     = { Cooperative multi-agent systems problems are ones in which several agents attempt, through their interaction, to jointly solve tasks or to maximize their utility. Due to the interactions among the agents, multi-agent problem complexity can rise rapidly with the number of agents or their behavioral sophistication. The challenge this presents to the task of programming solutions to such problems has spawned increasing interest in machine learning (ML) techniques to automate the search and optimization process.We provide a broad survey of the cooperative multiagent learning literature. Previous surveys of this area have largely focused on issues common to specific subareas (for example, reinforcement learning or robotics). In this survey we attempt to draw from multi-agent learning work in a spectrum of areas, including reinforcement learning, evolutionary computation, game theory, complex systems, agent modeling, and robotics.We find that this broad view leads to a division of the work into two categories, each with its own special issues: applying a single learner to discover joint solutions to multi-agent problems (team learning), or using multiple simultaneous learners, often one per agent (concurrent learning). Additionally, we discuss two important topics independent of these categories: problem decomposition and communication. We conclude with a presentation of multi-agent learning problem domains, a discussion of certain challenge topics (scalability and adaptive dynamics), and a list of multi-agent learning resources. },
}

@techreport { GMU-CS-TR-2003-0,
author       = { Sean Luke and Jana Kosecka },
title        = { How to Make a Technical Report },
institution  = { Department of Computer Science, George Mason University },
address      = { 4400 University Drive MS 4A5, Fairfax, VA 22030-4444 USA },
year         = { 2003 },
howpublished = { Available at http://cs.gmu.edu },
number       = { GMU-CS-TR-2003-0 },
note2        = { This document has been superceded by GMU CS Department Technical Report GMU-CS-TR-2008-0, ``How To Make a Technical Report (Rev. 2)'', by Sean Luke, available at http://cs.gmu.edu },
abstract     = { The following document describes the preferred formatting of technical reports and submission guidelines. This document itself is formatted according to the preferred formatting rules. },
}

@techreport { CS-TR-4078,
author       = { Jeff Heflin and James Hendler and Sean Luke },
year         = { 1999 },
title        = { {SHOE}: {a} Knowledge Representation Language for Internet Applications },
institution  = { Department of Computer Science, University of Maryland },
address      = { College Park, MD 20742 USA },
number       = { CS-TR-4078 },
abstract     = { It is our contention that the World Wide Web poses challenges to knowledge representation systems that fundamentally change the way we should design KR languages. In this paper, we describe the Simple HTML Ontology Extensions (SHOE), a KR language which allows web pages to be annotated with semantics. We present a formalism for the language and discuss the features which make it well suited for the Web. We describe the syntax and semantics of this language, and discuss the differences from traditional KR systems that make it more suited to modern web applications. We also describe some generic tools for using the language and demonstrate its capabilities by describing two prototype systems that use it. We also discuss some future tools currently being developed for the language. The language, tools, and details of the applications are all available on the World Wide Web at http://www.cs.umd.edu/projects/plus/SHOE. }
}

@techreport { CS-TR-3485,
author       = { William Anderson and Brian Kettler and Sean Luke and James Hendler },
year         = { 1995 },
title        = { Using the {Parka} Parallel Knowledge Representation System (Version 3.2) },
institution  = { Department of Computer Science, University of Maryland },
address      = { College Park, MD 20742 USA },
number       = { CS-TR-3485, UMIACS TR-95-68, ISR 95-56 },
abstract     = { This document is the user manual for the Parka Knowledge Representation System, version 3.2 ("Parka 3"). The purpose of this document is to describe the features of the Parka system and to provide some examples of how knowledge can be represented using the Parka language. Detail on the research issues addressed by Parka and the Parallel Server operation can be found in other documents described below. Parka has much in common with typical frame-based knowledge representation systems. What distinguishes Parka is its ability to perform certain types of very useful inferences faster than any existing system we know of. This speed is accomplished through the use of massively parallel hardware, such as the Connection Machine (CM-2 and CM-5) supercomputer made by Thinking Machines Corporation. If a parallel machine is not available, Parka can still be run in serial mode. If a CM is available as a parallel server, certain inferences will be done more quickly in parallel. Parka has been developed by the Parallel Understanding Systems A.I. Research Group, under the direction of Prof. James Hendler, in the Department of Computer Science at the University of Maryland at College Park. The original version of Parka was designed and implemented by Mat Evett and Lee Spector. Bill Andersen designed and implemented Parka 3. Some aspects of the Parka 3 language design were suggested by Brian Kettler. Sean Luke implemented a graphical browser and graphical query window for Parka 3. Merwyn Taylor assisted in the testing of Park 3. }
}










%
%
%
% Manuals
%
%
%

@manual { Luke2012MASONManual,
author       = { Sean Luke },
title        = { Multiagent Simulation and the MASON Library },
year         = { 2012 },
note         = { Updated regularly.  Over 350 Pages.  Available at http://cs.gmu.edu/\(\sim\)eclab/projects/mason/ },
}

@manual { Luke2011ECJManual,
author       = { Sean Luke },
title        = { The ECJ Owner's Manual },
year         = { 2011 },
note         = { Updated regularly.  Over 280 Pages.  Available at http://cs.gmu.edu/\(\sim\)eclab/projects/ecj/ },
}

@manual { Luke1996ShoeSpecification,
author       = { Sean Luke and Jeff Heflin },
title        = { SHOE: Proposed Specification },
year         = { 1996 },
note         = { Updated twelve times from 1996 through 2000, for {SHOE} versions 0.90 through 1.01. Available at https://www.cs.umd.edu/projects/plus/SHOE/spec.html }
}











%
%
%
% Software
%
%
%

@misc { Luke2003MASONSoftware,
author       = { Sean Luke },
title        = { {MASON} Multiagent Simulation Library },
year         = { 2003 },
note         = { Available for free at http://cs.gmu.edu/$\sim$eclab/projects/ecj/  },
}

@misc { Luke1998ECJSoftware,
author       = { Sean Luke },
title        = { {ECJ} Evolutionary Computation Library },
year         = { 1998 },
note         = { Available for free at http://cs.gmu.edu/$\sim$eclab/projects/ecj/  },
}




